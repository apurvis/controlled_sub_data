<%= form_for @substance_statute do |f| %>
   <% if @substance_statute.errors.any? %>
      <div id="error_explanation">
         <h2>
            <%= pluralize(@substance_statute.errors.count, "error") %> prohibited this substance-statute link from being saved:
         </h2>
         <ul>
            <% @substance_statute.errors.full_messages.each do |msg| %>
               <li><%= msg %></li>
            <% end %>
         </ul>
      </div>
   <% end %>

   <p>
      <%= f.label :statute_being_modified %><br/>
      <%= select(:substance_statute, :statute_id, [[@substance_statute.statute.formatted_name, @substance_statute.statute.id]]) %>
   </p>

   <p>
      <%= f.label :substance %><br/>
      <%= select(:substance_statute, :substance_id, Substance.all.sort { |a,b| a.name <=> b.name }.map { |s| [s.name[0..50], s.id] } ) %>
   </p>

   <% if @substance_statute.statute.is_a?(StatuteAmendment)%>
      <p>
         <%= f.label :is_statute_expiring_the_scheduling_of_this_substance %><br/>
         <%= select(:substance_statute, :is_expiration, [false, true]) %>
      </p>
   <% end %>

   <p>
      <%= f.label :classification %><br>
      <%= select(:substance_statute, :substance_classification_id, SubstanceClassification.all.sort { |a,b| a.to_s <=> b.to_s }.map { |c| [c.to_s, c.id] }, { include_blank: true } ) %>
   </p>

   <%= render partial: 'include_flags_checkboxes', locals: { f: f, klass: SubstanceStatute } %>

   <p>
      <%= f.label :schedule_level %><br/>
      <%= number_field(:substance_statute, :schedule_level, in: 1.0..5, step: 1) %>
   </p>

   <p>
      <%= f.label :comment, 'Comment (Should be relevant to the way this statute regulates this substance)' %><br/>
      <%= f.text_area(:comment, cols: '50', rows: '10') %>
   </p>

   <p>
      <%= f.submit %>
   </p>
<% end %>
